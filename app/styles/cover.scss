@import "variables";

.cover {
  background: white;
  height: 100vh;
  width: 100vw;
  position: absolute;
  bottom: 0;
  left: 0;
  z-index: 2000;
  overflow-y: hidden;

  input {
    border: 1px solid $gray;
    border-radius: 4px;
  }
  div[aria-expanded="true"] > input {
    border-bottom-left-radius: 0;
    border-bottom-right-radius: 0;
  }
}

.cover-inner {
  @extend .d-flex;
  @extend .flex-column;
  height: 100vh;
}

.cover-blankslate {
  background-color: purple;
}

/**
 * VH and VW units can cause issues on iOS devices: http://caniuse.com/#feat=viewport-units
 *
 * To overcome this, create media queries that target the width, height, and orientation of iOS devices.
 * It isn't optimal, but there is really no other way to solve the problem. In this example, I am fixing
 * the height of element `.foo` â€”which is a full width and height cover image.
 *
 * iOS Resolution Quick Reference: http://www.iosres.com/
 */


/**
 * iPad with portrait orientation.
 */
@media all and (device-width: 768px) and (device-height: 1024px) and (orientation:portrait){
  .cover, .cover-inner {
    height: 1024px;
  }
}

/**
 * iPad with landscape orientation.
 */
@media all and (device-width: 768px) and (device-height: 1024px) and (orientation:landscape){
  .cover, .cover-inner {
    height: 768px;
  }
}

/**
  * iPhone 6, 6s, 7
  */
@media all and (device-width: 375px) and (device-height: 667px) {
  .cover, .cover-inner {
    height: 550px;
  }
}

/**
 * iPhone 5
 * You can also target devices with aspect ratio.
 */
@media screen and (device-aspect-ratio: 40/71) {
  .cover, .cover-inner {
    height: 500px;
  }
}
